// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: calc.proto
// Protobuf C++ Version: 5.27.1

#include "calc.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr CalcResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ret_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CalcResponse::CalcResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CalcResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalcResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalcResponseDefaultTypeInternal() {}
  union {
    CalcResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalcResponseDefaultTypeInternal _CalcResponse_default_instance_;

inline constexpr CalcRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        a_{0},
        b_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CalcRequest::CalcRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CalcRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalcRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalcRequestDefaultTypeInternal() {}
  union {
    CalcRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalcRequestDefaultTypeInternal _CalcRequest_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_calc_2eproto = nullptr;
static const ::_pb::ServiceDescriptor*
    file_level_service_descriptors_calc_2eproto[1];
const ::uint32_t
    TableStruct_calc_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::CalcRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CalcRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CalcRequest, _impl_.a_),
        PROTOBUF_FIELD_OFFSET(::CalcRequest, _impl_.b_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CalcResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CalcResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CalcResponse, _impl_.ret_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::CalcRequest)},
        {12, 21, -1, sizeof(::CalcResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_CalcRequest_default_instance_._instance,
    &::_CalcResponse_default_instance_._instance,
};
const char descriptor_table_protodef_calc_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ncalc.proto\"#\n\013CalcRequest\022\t\n\001a\030\001 \002(\005\022\t"
    "\n\001b\030\002 \002(\005\"\033\n\014CalcResponse\022\013\n\003ret\030\001 \002(\0052\203"
    "\001\n\013CalcService\022\"\n\003Add\022\014.CalcRequest\032\r.Ca"
    "lcResponse\022\'\n\010Subtract\022\014.CalcRequest\032\r.C"
    "alcResponse\022\'\n\010Multiply\022\014.CalcRequest\032\r."
    "CalcResponseB\003\200\001\001"
};
static ::absl::once_flag descriptor_table_calc_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_calc_2eproto = {
    false,
    false,
    217,
    descriptor_table_protodef_calc_2eproto,
    "calc.proto",
    &descriptor_table_calc_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_calc_2eproto::offsets,
    file_level_enum_descriptors_calc_2eproto,
    file_level_service_descriptors_calc_2eproto,
};
// ===================================================================

class CalcRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CalcRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CalcRequest, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

CalcRequest::CalcRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CalcRequest)
}
CalcRequest::CalcRequest(
    ::google::protobuf::Arena* arena, const CalcRequest& from)
    : CalcRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CalcRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CalcRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, a_),
           0,
           offsetof(Impl_, b_) -
               offsetof(Impl_, a_) +
               sizeof(Impl_::b_));
}
CalcRequest::~CalcRequest() {
  // @@protoc_insertion_point(destructor:CalcRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CalcRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CalcRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              CalcRequest::IsInitializedImpl,
              PROTOBUF_FIELD_OFFSET(CalcRequest, _impl_._cached_size_),
              false,
          },
          &CalcRequest::MergeImpl,
          &CalcRequest::kDescriptorMethods,
          &descriptor_table_calc_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CalcRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CalcRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CalcRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CalcRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required int32 b = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalcRequest, _impl_.b_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CalcRequest, _impl_.b_)}},
    // required int32 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalcRequest, _impl_.a_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CalcRequest, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 a = 1;
    {PROTOBUF_FIELD_OFFSET(CalcRequest, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 b = 2;
    {PROTOBUF_FIELD_OFFSET(CalcRequest, _impl_.b_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CalcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CalcRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.a_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.b_) -
        reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.b_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CalcRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CalcRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  // required int32 b = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_b(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CalcRequest)
  return target;
}

::size_t CalcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CalcRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required int32 a = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_a());
    }

    // required int32 b = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_b());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CalcRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CalcRequest*>(&to_msg);
  auto& from = static_cast<const CalcRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CalcRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.b_ = from._impl_.b_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CalcRequest::CopyFrom(const CalcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CalcRequest::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const CalcRequest&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void CalcRequest::InternalSwap(CalcRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalcRequest, _impl_.b_)
      + sizeof(CalcRequest::_impl_.b_)
      - PROTOBUF_FIELD_OFFSET(CalcRequest, _impl_.a_)>(
          reinterpret_cast<char*>(&_impl_.a_),
          reinterpret_cast<char*>(&other->_impl_.a_));
}

::google::protobuf::Metadata CalcRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CalcResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CalcResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CalcResponse, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CalcResponse::CalcResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CalcResponse)
}
CalcResponse::CalcResponse(
    ::google::protobuf::Arena* arena, const CalcResponse& from)
    : CalcResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CalcResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CalcResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ret_ = {};
}
CalcResponse::~CalcResponse() {
  // @@protoc_insertion_point(destructor:CalcResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CalcResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CalcResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              CalcResponse::IsInitializedImpl,
              PROTOBUF_FIELD_OFFSET(CalcResponse, _impl_._cached_size_),
              false,
          },
          &CalcResponse::MergeImpl,
          &CalcResponse::kDescriptorMethods,
          &descriptor_table_calc_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CalcResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CalcResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CalcResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CalcResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required int32 ret = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalcResponse, _impl_.ret_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CalcResponse, _impl_.ret_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 ret = 1;
    {PROTOBUF_FIELD_OFFSET(CalcResponse, _impl_.ret_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CalcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CalcResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ret_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CalcResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CalcResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 ret = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_ret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CalcResponse)
  return target;
}

::size_t CalcResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CalcResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required int32 ret = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_ret());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CalcResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CalcResponse*>(&to_msg);
  auto& from = static_cast<const CalcResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CalcResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.ret_ = from._impl_.ret_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CalcResponse::CopyFrom(const CalcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CalcResponse::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const CalcResponse&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void CalcResponse::InternalSwap(CalcResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.ret_, other->_impl_.ret_);
}

::google::protobuf::Metadata CalcResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor* CalcService::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_calc_2eproto);
  return file_level_service_descriptors_calc_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* CalcService::GetDescriptor() {
  return descriptor();
}

void CalcService::Add(::google::protobuf::RpcController* controller,
                         const ::CalcRequest*, ::CalcResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Add() not implemented.");
  done->Run();
}
void CalcService::Subtract(::google::protobuf::RpcController* controller,
                         const ::CalcRequest*, ::CalcResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Subtract() not implemented.");
  done->Run();
}
void CalcService::Multiply(::google::protobuf::RpcController* controller,
                         const ::CalcRequest*, ::CalcResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Multiply() not implemented.");
  done->Run();
}

void CalcService::CallMethod(
    const ::google::protobuf::MethodDescriptor* method,
    ::google::protobuf::RpcController* controller,
    const ::google::protobuf::Message* request,
    ::google::protobuf::Message* response, ::google::protobuf::Closure* done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_calc_2eproto[0]);
  switch (method->index()) {
    case 0:
      Add(controller,
             ::google::protobuf::internal::DownCast<const ::CalcRequest*>(request),
             ::google::protobuf::internal::DownCast<::CalcResponse*>(response), done);
      break;
    case 1:
      Subtract(controller,
             ::google::protobuf::internal::DownCast<const ::CalcRequest*>(request),
             ::google::protobuf::internal::DownCast<::CalcResponse*>(response), done);
      break;
    case 2:
      Multiply(controller,
             ::google::protobuf::internal::DownCast<const ::CalcRequest*>(request),
             ::google::protobuf::internal::DownCast<::CalcResponse*>(response), done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& CalcService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::CalcRequest::default_instance();
    case 1:
      return ::CalcRequest::default_instance();
    case 2:
      return ::CalcRequest::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& CalcService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::CalcResponse::default_instance();
    case 1:
      return ::CalcResponse::default_instance();
    case 2:
      return ::CalcResponse::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->output_type());
  }
}

CalcService_Stub::CalcService_Stub(::google::protobuf::RpcChannel* channel)
    : channel_(channel), owns_channel_(false) {}

CalcService_Stub::CalcService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership ==
                    ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

CalcService_Stub::~CalcService_Stub() {
  if (owns_channel_) delete channel_;
}

void CalcService_Stub::Add(::google::protobuf::RpcController* controller,
                              const ::CalcRequest* request,
                              ::CalcResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
void CalcService_Stub::Subtract(::google::protobuf::RpcController* controller,
                              const ::CalcRequest* request,
                              ::CalcResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1), controller,
                       request, response, done);
}
void CalcService_Stub::Multiply(::google::protobuf::RpcController* controller,
                              const ::CalcRequest* request,
                              ::CalcResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2), controller,
                       request, response, done);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_calc_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
